
@model TalkToTreat.Models.Appointment
@{
    ViewBag.Title = "Reply";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

@using (Html.BeginForm("UpdateAppointment", "ManageDoctor", FormMethod.Post, new { enctype = "multipart/form-data", id = "formUpdateAppointment" }))
{
    <div class="content-page">
        <div class="content">
            <!-- Start Content-->
            <div class="container-fluid">
                <!-- start page title -->
                <div class="row">
                    <div class="col-12">
                        <div class="page-title-box">
                            <div class="page-title-right">
                            </div>`
                            <h4 class="page-title">Reply to : @Model.FullName ( @Model.EmailId)</h4>
                        </div>
                    </div>
                </div>
                <!-- end page title -->
                <div class="row">
                    <div class="col-lg-12">
                        <div class="card-box">
                            <input type="hidden" value="@Model.Id" name="Id" />
                            <input type="hidden" value="@Model.EmailId" name="EmailId" />
                            <input type="hidden" value="@Model.DoctorEmail" name="DoctorEmail" />
                            <div class="form-group mb-3">
                                <label for="product-name">Subject <span class="text-danger">*</span></label>
                                @Html.TextBoxFor(model => model.Subject, new { @class = "form-control", placeholder = "e.g : Subject", required = true })
                            </div>

                            <div class="form-group mb-3">
                                <label for="product-price">Message <span class="text-danger">*</span></label>
                                @Html.TextAreaFor(model => model.Body, new { @class = "form-control", placeholder = "Enter Message", required = true })
                            </div>

                            <div class="form-group mb-3">
                                <label for="product-price">Appointment Status <span class="text-danger">*</span></label>
                                @Html.RadioButtonFor(s => s.Status, (int)BaseApiApp.Entities.Enum.AppointmentStatus.Pending) Pending
                                @Html.RadioButtonFor(s => s.Status, (int)BaseApiApp.Entities.Enum.AppointmentStatus.Inqueue) Inqueue
                                @Html.RadioButtonFor(s => s.Status, (int)BaseApiApp.Entities.Enum.AppointmentStatus.Scheduled) Scheduled
                            </div>

                            <div id="divSchedule" style="display:none;">



                                <div class="form-group mb-3">
                                    <label for="product-price">Meeting Date Time :</label>

                                    <span id="SpanMeetingDateTime">
                                        @Model.AppointMentDate.ToString("MM/dd/yyyy")
                                        @Html.HiddenFor(model => model.AppointMentDate)

                                        <div class='input-group date' id="start_time" style="width: 120px; margin-top: -29px; margin-left: 216px;">
                                            @Html.TextBoxFor(model => model.AppointMentTime, new { @class = "form-control", placeholder = "Enter Message", required = true })
                                            <span class="input-group-addon">
                                                <span class="glyphicon glyphicon-calendar"></span>
                                            </span>
                                        </div>
                                    </span>
                                </div>
                                <div class="form-group mb-3">
                                    <label for="product-price">Attendees</label>
                                    <span> Doctor : @Model.DoctorName ( @Model.DoctorEmail ) </span>
                                    <br />
                                    <span style="margin-left:68px;"> User : @Model.FullName (@Model.EmailId) </span>
                                    <br />
                                    <span style="margin-left:68px; display:inline-block; ">
                                        CC list :
                                        @Html.HiddenFor(model => model.cclist)
                                        <input type="email" name="recipient_email" id="recipient_email" class="form-control">
                                        @*@Html.TextBoxFor(model => model.cclist, new { @class = "form-control", placeholder = "Translator/ Interpreter/ Support (multiple email ids separated by semicolon)", maxlength = 300, type = "email", multiple = "true", Style = "display:inline-block; width:500px;" })*@
                                       <p>(press enter or space or semicolon " ; " to add Translator/ Interpreter/ Support multiple emails)</p>

                                        @*<p>(email address with email ids separated by semicolon " ; " is allowed)</p>*@
                                    </span>
                                </div>
                                <div class="form-group mb-3" style="display:@((Model.GoogleMeetUrl!= null && Model.GoogleMeetUrl.Length>0)?"block":"none")">
                                    <label for="product-price">Meet Url :</label>
                                    <span> @Model.GoogleMeetUrl</span>
                                </div>
                            </div>
                        </div> <!-- end card-box -->
                    </div> <!-- end col -->
                </div>
                <!-- end row -->
                <!-- end row -->
            </div> <!-- container -->

        </div> <!-- content -->
        <!-- Footer Start -->
        <footer class="footer">
            <div class="container-fluid">
                <div class="col-12">
                    <div class="text-center mb-3">
                        @if (Model.IsReplied)
                        {
                            <a href="/ManageDoctor/Appointmentlist" class="btn w-sm btn-light waves-effect">Back</a>
                        }
                        else
                        {
                            <a href="/ManageDoctor/Appointmentlist" class="btn w-sm btn-light waves-effect">Cancel</a>
                        }

                        <button id="btnSave" type="submit" class="btn w-sm btn-success waves-effect waves-light">Save</button>
                    </div>
                </div>
            </div>
        </footer>
        <!-- end Footer -->
    </div>
}

<div class="modal fade" id="ModalPopUp" role="dialog">
    <div class="modal-dialog err-pop" style="">
        <div class="modal-content">
            <div class="modal-header">
                <h5>Cancel Reason</h5>
                <button id="DivClose" type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body" style="text-align:center;">
                <input type="hidden" id="hndIdAppointment" value="" />

                <textarea id="txtRegion" required="required" rows="3" cols="45"></textarea>

                <br />
                <br />
                <input type="button" value="Save" class="btn btn-success succes-btn" onclick="SaveCancelRegion();" />
            </div>
        </div>
    </div>
</div>

<link href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.css" rel="stylesheet" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.37/css/bootstrap-datetimepicker.css" rel="stylesheet" />

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.19.4/moment.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.7/js/bootstrap.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.37/js/bootstrap-datetimepicker.min.js"></script>





<script>
    function validateEmail(email) {
        var re = /^([\w-]+(?:\.[\w-]+)*)@@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/i;
        return re.test(email);
    }
    (function ($) {
        $.fn.multipleInput = function () {
            return this.each(function () {
                // list of email addresses as unordered list
                $list = $('<ul/>');
                // input
                var $input = $('<input type="email" id="email_search" class="email_search multiemail"/>').keyup(function (event) {
                    if (event.which == 13 || event.which == 32 || event.which == 186) {
                        if (event.which == 186) {
                            var val = $(this).val().slice(0, -1);// remove space/comma from value
                        }
                        else {
                            var val = $(this).val(); // 
                        }
                        if (validateEmail(val)) {
                            // append to list of emails with remove button
                            $list.append($('<li class="multipleInput-email"><span>' + val + '</span></li>')
                                .append($('<a href="#" class="multipleInput-close" title="Remove" email=' + val +' ><i class="glyphicon glyphicon-remove-sign"></i></a>')
                                    .click(function (e) {
                                        $(this).parent().remove();
                                        e.preventDefault();
                                    })
                                )
                            );   

                            var elements = document.getElementsByClassName("multipleInput-close");
                            for (var i = 0; i < elements.length; i++) {
                                elements[i].addEventListener('click', function () {
                                    debugger;
                                    var val = $(this).attr("email");
                                    $("#cclist").val($("#cclist").val().replace(val, ""));
                                    // alert('govind');
                                }, false);
                            }

                            $("#cclist").val($("#cclist").val() + ";" + val);
                            $(this).attr('placeholder', '');
                            // empty input
                            $(this).val('');
                        }
                        else {
                            alert('Please enter valid email id, Thanks!');
                        }
                    }
                });
                // container div
                var $container = $('<div class="multipleInput-container" />').click(function () {
                    $input.focus();
                });
                // insert elements into DOM
                $container.append($list).append($input).insertAfter($(this));
                return $(this).hide();
            });
        };
    })(jQuery);

    $('.multipleInput-close').on("click", function () {
        debugger;
        var val = $(this).attr("email");
        $("#cclist").val($("#cclist").val().replace(val, ""));
        // alert('govind');
    });

    $('#recipient_email').multipleInput();    
</script>

<script type="text/javascript">
    $(document).ready(function () {
        if (@Model.Status == "2") {
            $("#divSchedule").show();
        }

        // list of email addresses as unordered list
        setTimeout(function () {
            var data = '@Model.cclist';
            if (data.length > 1) {
                var arr = data.split(';');
                //find ul tag and add into
                $list = $('.multipleInput-container ul:first');
                $.each(arr, function (index, value) {
                    $list.append($('<li class="multipleInput-email"><span>' + value + '</span></li>')
                        .append($('<a href="#" class="multipleInput-close" title="Remove" email=' + value + ' ><i class="glyphicon glyphicon-remove-sign"></i></a>')
                            .click(function (e) {
                                $(this).parent().remove();
                                e.preventDefault();
                            })
                        )
                    );
                });
            }

            $('.multipleInput-close').on("click", function () {
                debugger;
                var val = $(this).attr("email");
                $("#cclist").val($("#cclist").val().replace(val, ""));
                // alert('govind');
            });

        }, 500);

        $(window).keydown(function (event) {
            if (event.keyCode == 13) {
                event.preventDefault();
                return false;
            }
        });
               
    });

    $('#start_time').datetimepicker({
        format: 'HH:mm',
        useCurrent: false,
    });

    $('input[type=radio][name=Status]').change(function () {
        if (this.value == '2') {
            $("#divSchedule").show();
            $("#btnSave").text("Schedule & Save");
        }
        else {
            $("#divSchedule").hide();
            $("#btnSave").text("Save");
        }
    });

</script>

<style>
    /*multi email input*/
    .multipleInput-container {
        border: 1px #ccc solid;
        padding: 1px;
        padding-bottom: 0;
        cursor: text;
        font-size: 13px;
        width: 100%;
        height: 75px;
        overflow: auto;
        background-color: white;
        border-radius: 3px;
    }

        .multipleInput-container input {
            font-size: 13px;
            /*clear:both;*/
            width: 150px;
            height: 24px;
            border: 0;
            margin-bottom: 1px;
            outline: none
        }

        .multipleInput-container ul {
            list-style-type: none;
            padding-left: 0px !important;
        }

    li.multipleInput-email {
        float: left;
        margin-right: 2px;
        margin-bottom: 1px;
        border: 1px #BBD8FB solid;
        padding: 2px;
        background: #F3F7FD;
    }

    .multipleInput-close {
        width: 16px;
        height: 16px;
        background: url(close.png);
        display: block;
        float: right;
        margin: 0 3px;
    }

    .email_search {
        width: 100% !important;
    }
</style>


